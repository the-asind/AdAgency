// <auto-generated />
using System;
using AdAgency.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AdAgency.Migrations
{
    [DbContext(typeof(AdAgencyContext))]
    [Migration("20241029213937_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AdAgency.Models.AdvertisementWork", b =>
                {
                    b.Property<int>("WorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WorkId"));

                    b.Property<int>("ContractId")
                        .HasColumnType("integer");

                    b.Property<decimal>("WorkCost")
                        .HasColumnType("numeric");

                    b.Property<string>("WorkDescription")
                        .HasColumnType("text");

                    b.HasKey("WorkId");

                    b.HasIndex("ContractId");

                    b.ToTable("AdvertisementWorks");

                    b.HasData(
                        new
                        {
                            WorkId = 1,
                            ContractId = 1,
                            WorkCost = 1000m,
                            WorkDescription = "Work 1"
                        },
                        new
                        {
                            WorkId = 2,
                            ContractId = 2,
                            WorkCost = 2000m,
                            WorkDescription = "Work 2"
                        });
                });

            modelBuilder.Entity("AdAgency.Models.AuditLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LogId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RecordId")
                        .HasColumnType("integer");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("LogId");

                    b.HasIndex("UserId");

                    b.ToTable("AuditLogs");

                    b.HasData(
                        new
                        {
                            LogId = 1,
                            Action = "Action 1",
                            RecordId = 1,
                            TableName = "Table 1",
                            UserId = 1,
                            Version = new byte[0]
                        },
                        new
                        {
                            LogId = 2,
                            Action = "Action 2",
                            RecordId = 2,
                            TableName = "Table 2",
                            UserId = 2,
                            Version = new byte[0]
                        });
                });

            modelBuilder.Entity("AdAgency.Models.Billboard", b =>
                {
                    b.Property<int>("BillboardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BillboardId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CityDistrict")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LocationDescription")
                        .HasColumnType("text");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("RentAmountPerWeek")
                        .HasColumnType("numeric");

                    b.Property<decimal>("UsefulArea")
                        .HasColumnType("numeric");

                    b.HasKey("BillboardId");

                    b.ToTable("Billboards");

                    b.HasData(
                        new
                        {
                            BillboardId = 1,
                            Address = "Address 1",
                            CityDistrict = "District 1",
                            LocationDescription = "Location 1",
                            RegistrationNumber = "RN1",
                            RentAmountPerWeek = 100m,
                            UsefulArea = 100m
                        },
                        new
                        {
                            BillboardId = 2,
                            Address = "Address 2",
                            CityDistrict = "District 2",
                            LocationDescription = "Location 2",
                            RegistrationNumber = "RN2",
                            RentAmountPerWeek = 200m,
                            UsefulArea = 200m
                        });
                });

            modelBuilder.Entity("AdAgency.Models.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ContractId"));

                    b.Property<string>("AdditionalTerms")
                        .HasColumnType("text");

                    b.Property<string>("AgencyResponsible")
                        .HasColumnType("text");

                    b.Property<string>("ContractNumber")
                        .HasColumnType("text");

                    b.Property<string>("PaymentType")
                        .HasColumnType("text");

                    b.Property<int>("RenterId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SigningDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.HasKey("ContractId");

                    b.HasIndex("RenterId");

                    b.ToTable("Contracts");

                    b.HasData(
                        new
                        {
                            ContractId = 1,
                            AdditionalTerms = "None",
                            AgencyResponsible = "Agency1",
                            ContractNumber = "123456",
                            PaymentType = "Cash",
                            RenterId = 1,
                            SigningDate = new DateTime(2024, 10, 29, 21, 39, 37, 265, DateTimeKind.Utc).AddTicks(8005),
                            Status = "active",
                            TotalAmount = 0m
                        },
                        new
                        {
                            ContractId = 2,
                            AdditionalTerms = "None",
                            AgencyResponsible = "Agency2",
                            ContractNumber = "654321",
                            PaymentType = "Credit",
                            RenterId = 2,
                            SigningDate = new DateTime(2024, 10, 29, 21, 39, 37, 265, DateTimeKind.Utc).AddTicks(8005),
                            Status = "cancelled",
                            TotalAmount = 0m
                        });
                });

            modelBuilder.Entity("AdAgency.Models.ContractBillboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdvertisementPhotoLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BillboardId")
                        .HasColumnType("integer");

                    b.Property<int>("ContractId")
                        .HasColumnType("integer");

                    b.Property<decimal>("RentAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("RentEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("RentStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BillboardId");

                    b.HasIndex("ContractId");

                    b.ToTable("ContractBillboards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdvertisementPhotoLink = "https://mods.store.gx.me/mod/32027713-3e24-46ea-98d2-708f13991e17/cover/5b8f3267-3ad1-444e-8f75-83bab0a48848/webp-640x360?4b8390341bc39300397de58b9cb17301",
                            BillboardId = 1,
                            ContractId = 1,
                            RentAmount = 1000m,
                            RentEndDate = new DateTime(2024, 11, 19, 21, 39, 37, 265, DateTimeKind.Utc).AddTicks(8036),
                            RentStartDate = new DateTime(2024, 10, 29, 21, 39, 37, 265, DateTimeKind.Utc).AddTicks(8034)
                        },
                        new
                        {
                            Id = 2,
                            AdvertisementPhotoLink = "https://avatars.mds.yandex.net/get-mpic/4880383/img_id745194673364714228.jpeg/orig",
                            BillboardId = 2,
                            ContractId = 2,
                            RentAmount = 2000m,
                            RentEndDate = new DateTime(2024, 11, 12, 21, 39, 37, 265, DateTimeKind.Utc).AddTicks(8042),
                            RentStartDate = new DateTime(2024, 10, 29, 21, 39, 37, 265, DateTimeKind.Utc).AddTicks(8041)
                        });
                });

            modelBuilder.Entity("AdAgency.Models.Renter", b =>
                {
                    b.Property<int>("RenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RenterId"));

                    b.Property<string>("BankAccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactPersonName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactPersonPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DirectorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DirectorPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LegalAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RenterId");

                    b.ToTable("Renters");

                    b.HasData(
                        new
                        {
                            RenterId = 1,
                            BankAccountNumber = "Account1",
                            BankName = "Bank1",
                            ContactPersonName = "Contact1",
                            ContactPersonPhone = "Phone1",
                            DirectorName = "Director1",
                            DirectorPhone = "Phone1",
                            Email = "email@1.com",
                            Inn = "Inn1",
                            LegalAddress = "Address1",
                            Name = "Renter1",
                            Status = "Status1"
                        },
                        new
                        {
                            RenterId = 2,
                            BankAccountNumber = "Account2",
                            BankName = "Bank2",
                            ContactPersonName = "Contact2",
                            ContactPersonPhone = "Phone2",
                            DirectorName = "Director2",
                            DirectorPhone = "Phone2",
                            Inn = "Inn2",
                            LegalAddress = "Address2",
                            Name = "Renter2",
                            Status = "Status2"
                        });
                });

            modelBuilder.Entity("AdAgency.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<int?>("RenterId")
                        .HasColumnType("integer");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.HasIndex("RenterId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            PasswordHash = "8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918",
                            RenterId = 1,
                            Role = "admin",
                            Username = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            PasswordHash = "87eba76e7f3164534045ba922e7770fb58bbd14ad732bbf5ba6f11cc56989e6e",
                            RenterId = 2,
                            Role = "configurator",
                            Username = "worker"
                        });
                });

            modelBuilder.Entity("AdAgency.Models.AdvertisementWork", b =>
                {
                    b.HasOne("AdAgency.Models.Contract", "Contract")
                        .WithMany("AdvertisementWorks")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("AdAgency.Models.AuditLog", b =>
                {
                    b.HasOne("AdAgency.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AdAgency.Models.Contract", b =>
                {
                    b.HasOne("AdAgency.Models.Renter", "Renter")
                        .WithMany()
                        .HasForeignKey("RenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Renter");
                });

            modelBuilder.Entity("AdAgency.Models.ContractBillboard", b =>
                {
                    b.HasOne("AdAgency.Models.Billboard", "Billboard")
                        .WithMany()
                        .HasForeignKey("BillboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdAgency.Models.Contract", "Contract")
                        .WithMany("ContractBillboards")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Billboard");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("AdAgency.Models.User", b =>
                {
                    b.HasOne("AdAgency.Models.Renter", "Renter")
                        .WithMany()
                        .HasForeignKey("RenterId");

                    b.Navigation("Renter");
                });

            modelBuilder.Entity("AdAgency.Models.Contract", b =>
                {
                    b.Navigation("AdvertisementWorks");

                    b.Navigation("ContractBillboards");
                });
#pragma warning restore 612, 618
        }
    }
}
